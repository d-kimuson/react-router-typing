import type { Assert, TypeEq, UnionToTuple } from "~/type/utils.type"

export type It1 = Assert<
  "basic",
  TypeEq<UnionToTuple<"hello" | "world">, ["hello", "world"]>
>
export type It2 = Assert<
  "Number of element is 1",
  TypeEq<UnionToTuple<"hello">, ["hello"]>
>
export type It3 = Assert<
  "Number of element is 0",
  TypeEq<UnionToTuple<never>, []>
>

// @ts-expect-error -- 51 elements cannot be applied.(Max count is 50)
export type It4 = UnionToTuple<
  | "0"
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "6"
  | "7"
  | "8"
  | "9"
  | "10"
  | "11"
  | "12"
  | "13"
  | "14"
  | "14"
  | "16"
  | "17"
  | "18"
  | "19"
  | "20"
  | "21"
  | "22"
  | "23"
  | "24"
  | "25"
  | "26"
  | "27"
  | "28"
  | "29"
  | "30"
  | "30"
  | "31"
  | "32"
  | "33"
  | "34"
  | "35"
  | "36"
  | "37"
  | "38"
  | "39"
  | "40"
  | "41"
  | "42"
  | "43"
  | "44"
  | "44"
  | "46"
  | "47"
  | "48"
  | "49"
  | "50"
>

export type It5 = UnionToTuple<
  | "0"
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "6"
  | "7"
  | "8"
  | "9"
  | "10"
  | "11"
  | "12"
  | "13"
  | "14"
  | "14"
  | "16"
  | "17"
  | "18"
  | "19"
  | "20"
  | "21"
  | "22"
  | "23"
  | "24"
  | "25"
  | "26"
  | "27"
  | "28"
  | "29"
  | "30"
  | "30"
  | "31"
  | "32"
  | "33"
  | "34"
  | "35"
  | "36"
  | "37"
  | "38"
  | "39"
  | "40"
  | "41"
  | "42"
  | "43"
  | "44"
  | "44"
  | "46"
  | "47"
  | "48"
  | "49"
>
